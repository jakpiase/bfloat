name: Build

on: push

jobs:
  build_wheels:
    runs-on: 'ubuntu-20.04'
    strategy:
      matrix:
        os: ['ubuntu-20.04']
        python-version: ['3.11']
        linux-archs: ['aarch64 ppc64le s390x']
        include:
          - python-version: '3.11'
            numpy-version: 1.23.2
            ci-build-regex: cp311-*
        exclude:
          - os: macos-10.15
            linux-archs: 'ppc64le'
          - os: macos-10.15
            linux-archs: 's390x'
          - os: windows-2019
            linux-archs: 'ppc64le'
          - os: windows-2019
            linux-archs: 's390x'
            
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Setup pip
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel

      - name: Clone submodules
        run: git submodule update --init --recursive

      - name: Build wheel
        run: python -m cibuildwheel --output-dir dist/
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.linux-archs }}
          CIBW_BUILD: ${{ matrix.ci-build-regex }}
          CIBW_BEFORE_BUILD: python -m pip install --force-reinstall --no-cache-dir numpy==${{ matrix.numpy-version }}
          CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux2014_x86_64
          CIBW_MANYLINUX_I686_IMAGE: quay.io/pypa/manylinux2014_i686

      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl
